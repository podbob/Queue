class MyCircularQueue:
    def __init__(self, k):
        self.capacity = k
        self.queue = [None] * k
        self.front = 0
        self.rear = -1
        self.size = 0

    def enQueue(self, value):
        if not self.isFull():
            self.rear = (self.rear + 1) % self.capacity
            self.queue[self.rear] = value
            self.size += 1
            return True
        return False

    def deQueue(self):
        if not self.isEmpty():
            self.front = (self.front + 1) % self.capacity
            self.size -= 1
            return True
        return False

    def Front(self):
        return -1 if self.isEmpty() else self.queue[self.front]

    def Rear(self):
        return -1 if self.isEmpty() else self.queue[self.rear]

    def isEmpty(self):
        return self.size == 0

    def isFull(self):
        return self.size == self.capacity

# Приклад використання
myCircularQueue = MyCircularQueue(3)
print(myCircularQueue.enQueue(1))  # Виведе: True
print(myCircularQueue.enQueue(2))  # Виведе: True
print(myCircularQueue.enQueue(3))  # Виведе: True
print(myCircularQueue.enQueue(4))  # Виведе: False
print(myCircularQueue.Rear())      # Виведе: 3
print(myCircularQueue.isFull())    # Виведе:True
print(myCircularQueue.deQueue())   # Виведе: True
print(myCircularQueue.enQueue(4))  #Виведе: True
print(myCircularQueue.Rear())      # Виведе: 4
